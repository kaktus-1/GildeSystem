name: "releaser"

on:
  push:
    branches:
      - "master"

jobs:
  info:
    runs-on: ubuntu-latest
    name: "Starting releasing..."
    steps:
      - name: "Test"
        run: echo "done!"

  compile_build_release:
    runs-on: ubuntu-latest
    name: Build the Maven Project
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v2
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 16
      - name: Compile the Project
        run: mvn -B compile
      - name: Extract Maven project version
        run: echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
        id: version
      - name: Extract Maven project name
        run: echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.name}' --non-recursive exec:exec)
        id: project
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Set up JDK 16
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '16'
      - name: Build and test project
        run: mvn -B verify
      - name: files
        run: ls -R
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          title: "${{ steps.project.outputs.version }} v${{ steps.version.outputs.version }}"
          automatic_release_tag: "${{ steps.version.outputs.version }}"
          files: |
            target/${{ steps.project.outputs.version }}-${{ steps.version.outputs.version }}.jar
        id: automatic_releases